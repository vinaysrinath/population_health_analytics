<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->

	<context:component-scan base-package="com.t20.app" />

	<!-- Views beans:mapped in views.properties (PDF, XLS classes, and others) -->
	<beans:bean id="contentNegotiatingResolver"	class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order"
			value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
		<beans:property name="contentNegotiationManager">
			<beans:bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry key="html" value="text/html" />
								<beans:entry key="pdf" value="application/pdf" />
								<beans:entry key="xsl" value="application/vnd.ms-excel" />
								<beans:entry key="xml" value="application/xml" />
								<beans:entry key="json" value="application/json" />
								<beans:entry key="atom" value="application/xml" />
							</beans:map>
						</beans:constructor-arg>
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
	</beans:bean>
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order"
			value="#{contentNegotiatingResolver.order+1}" />
	</beans:bean>

	<!-- <beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<beans:property name="basename" value="views" />
		<beans:property name="order" value="#{tilesViewResolver.order+1}" />
	</beans:bean> -->

	<!-- Helper class to configure Tiles 3.x for the Spring Framework -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html -->
	<!-- The actual tiles templates are in the tiles-definitions.xml -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tile-defs.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>


</beans:beans>
